name: publish-packages
on:
  workflow_dispatch:
    inputs:
      version:
        description: version of the npm packages you want to publish
        required: true
        type: string
jobs:
  create-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 15
      - run: git checkout -b version/${{ github.event.inputs.version }}
      - run: ./.github/scripts/set_packages_version.sh ${{ github.event.inputs.version }}
      - run: git config user.name ".github/workflows/publish-packages"
      - run: git config user.email "<>"
      - run: git commit -a -m "Set packages version to ${{ github.event.inputs.version }}"
      - run: git push --set-upstream origin version/${{ github.event.inputs.version }}
  publish-destination-packages:
    # https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages#publishing-packages-to-the-npm-registry
    needs: create-branch
    strategy:
      matrix:
        destination_name: ['mixpanel', 'segment']
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: destinations/${{ matrix.destination_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: version/${{ github.event.inputs.version }}
      - uses: actions/setup-node@v3
        with:
          node-version: 15
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - run: npm run build
      - run: npm run deploy
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
  publish-sdk-package:
    # we deploy sdk only if we could deploy destinations successfully
    needs: publish-destination-packages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdk
    steps:
      - uses: actions/checkout@v3
        with:
          ref: version/${{ github.event.inputs.version }}
      - uses: actions/setup-node@v3
        with:
          node-version: 15
          registry-url: 'https://registry.npmjs.org'
      - run: cd ../interface && npm run build
      - run: npm install
      - run: npm run build
      - run: npm run deploy
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
